name: CI/CD Pipeline

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  CREATE_AND_RUN_DOCKER_IMAGE:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build Docker image
        run: |
          docker build -t amaurya1702/selenium-test:latest -f Dockerfile .
          docker run -d --name selenium-container amaurya1702/selenium-test:latest

      - name: Push Docker image to Docker Hub
        run: docker push amaurya1702/selenium-test:latest

  RUN_SELENIUM_TEST:
    needs: CREATE_AND_RUN_DOCKER_IMAGE
    runs-on: ubuntu-latest

#    services:
#      selenium-container:
#        image: amaurya1702/selenium-test:latest
#        options: --name selenium-container
#        credentials:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image
        run: docker pull amaurya1702/selenium-test:latest

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          architecture: 'x64'

#      - name: Install Maven
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y maven

      - name: Install Maven Wrapper
        run: |
          curl -fsSL https://github.com/apache/maven/archive/refs/tags/maven-3.8.4.tar.gz | tar xz
          mv maven-maven-3.8.4 /usr/share/maven
          export PATH="/usr/share/maven/bin:$PATH"

      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: /usr/share/maven
          key: maven-${{ runner.os }}-${{ hashFiles('**/usr/share/maven/**') }}

      - name: Checking out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Maven settings.xml
        run: cp ./.github/settings/settings.xml $HOME/.m2/settings.xml

      - name: Clean and Build
        run: |
          mvn clean

      - name: Run Test, Generate Allure Report
        run: |
          chmod +x mvnw 
          ./mvnw clean test -s ./.github/settings/settings.xml allure:report -X
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}